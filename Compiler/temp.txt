    def mathStuff():
        if (temp == 3): # b = 3 or b = a : 0 1 2
            #this is where the zero flag will go
            if (placeHolder[0] == 'a'):
                if (placeHolder[2] == 'a'):
                    eax = a
                    a = eax
                    writeASM(lineCounterASM, 'mov eax, a')
                    writeASM(lineCounterASM, 'mov a, eax')

                elif (placeHolder[2] == 'b'):
                    eax = b
                    a = eax
                    writeASM(lineCounterASM, 'mov eax, b')
                    writeASM(lineCounterASM, 'mov a, eax')

                elif (placeHolder[2] == 'c'):
                    eax = c
                    a = eax
                    writeASM(lineCounterASM, 'mov eax, c')
                    writeASM(lineCounterASM, 'mov a, eax')

                elif (placeHolder[2] == 'x'):
                    eax = x
                    a = eax
                    writeASM(lineCounterASM, 'mov eax, x')
                    writeASM(lineCounterASM, 'mov a, eax')

                elif (placeHolder[2] == 'y'):
                    eax = y
                    a = eax
                    writeASM(lineCounterASM, 'mov eax, y')
                    writeASM(lineCounterASM, 'mov a, eax')

                elif (placeHolder[2] == 'z'):
                    eax = z
                    a = eax
                    writeASM(lineCounterASM, 'mov eax, z')
                    writeASM(lineCounterASM, 'mov a, eax')

                else:
                    eax = placeHolder[2]
                    a = eax
                    var4 = 'mov eax, ' + placeHolder[2]
                    writeASM(lineCounterASM, var4)
                    writeASM(lineCounterASM, 'mov a, eax')

            elif (placeHolder[0] == 'b'):
                if (placeHolder[2] == 'a'):
                    eax = a
                    b = eax
                    writeASM(lineCounterASM, 'mov eax, a')
                    writeASM(lineCounterASM, 'mov b, eax')

                elif (placeHolder[2] == 'b'):
                    eax = b
                    b = eax
                    writeASM(lineCounterASM, 'mov eax, b')
                    writeASM(lineCounterASM, 'mov b, eax')

                elif (placeHolder[2] == 'c'):
                    eax = c
                    b = eax
                    writeASM(lineCounterASM, 'mov eax, c')
                    writeASM(lineCounterASM, 'mov b, eax')

                elif (placeHolder[2] == 'x'):
                    eax = x
                    b = eax
                    writeASM(lineCounterASM, 'mov eax, x')
                    writeASM(lineCounterASM, 'mov b, eax')

                elif (placeHolder[2] == 'y'):
                    eax = y
                    b = eax
                    writeASM(lineCounterASM, 'mov eax, y')
                    writeASM(lineCounterASM, 'mov b, eax')

                elif (placeHolder[2] == 'z'):
                    eax = z
                    b = eax
                    writeASM(lineCounterASM, 'mov eax, z')
                    writeASM(lineCounterASM, 'mov b, eax')

                else:
                    eax = placeHolder[2]
                    b = eax
                    var4 = 'mov eax, ' + placeHolder[2]
                    writeASM(lineCounterASM, var4)
                    writeASM(lineCounterASM, 'mov b, eax')

            elif (placeHolder[0] == 'c'):
                if (placeHolder[2] == 'a'):
                    eax = a
                    c = eax
                    writeASM(lineCounterASM, 'mov eax, a')
                    writeASM(lineCounterASM, 'mov c, eax')

                elif (placeHolder[2] == 'b'):
                    eax = b
                    c = eax
                    writeASM(lineCounterASM, 'mov eax, b')
                    writeASM(lineCounterASM, 'mov c, eax')

                elif (placeHolder[2] == 'c'):
                    eax = c
                    c = eax
                    writeASM(lineCounterASM, 'mov eax, c')
                    writeASM(lineCounterASM, 'mov c, eax')

                elif (placeHolder[2] == 'x'):
                    eax = x
                    c = eax
                    writeASM(lineCounterASM, 'mov eax, x')
                    writeASM(lineCounterASM, 'mov c, eax')

                elif (placeHolder[2] == 'y'):
                    eax = y
                    c = eax
                    writeASM(lineCounterASM, 'mov eax, y')
                    writeASM(lineCounterASM, 'mov c, eax')

                elif (placeHolder[2] == 'z'):
                    eax = z
                    c = eax
                    writeASM(lineCounterASM, 'mov eax, z')
                    writeASM(lineCounterASM, 'mov c, eax')

                else:
                    eax = placeHolder[2]
                    c = eax
                    var4 = 'mov eax, ' + placeHolder[2]
                    writeASM(lineCounterASM, var4)
                    writeASM(lineCounterASM, 'mov c, eax')

            elif (placeHolder[0] == 'x'):
                if (placeHolder[2] == 'a'):
                    eax = a
                    x = eax
                    writeASM(lineCounterASM, 'mov eax, a')
                    writeASM(lineCounterASM, 'mov x, eax')

                elif (placeHolder[2] == 'b'):
                    eax = b
                    x = eax
                    writeASM(lineCounterASM, 'mov eax, b')
                    writeASM(lineCounterASM, 'mov x, eax')

                elif (placeHolder[2] == 'c'):
                    eax = c
                    x = eax
                    writeASM(lineCounterASM, 'mov eax, c')
                    writeASM(lineCounterASM, 'mov x, eax')

                elif (placeHolder[2] == 'x'):
                    eax = x
                    x = eax
                    writeASM(lineCounterASM, 'mov eax, x')
                    writeASM(lineCounterASM, 'mov x, eax')

                elif (placeHolder[2] == 'y'):
                    eax = y
                    x = eax
                    writeASM(lineCounterASM, 'mov eax, y')
                    writeASM(lineCounterASM, 'mov x, eax')

                elif (placeHolder[2] == 'z'):
                    eax = z
                    x = eax
                    writeASM(lineCounterASM, 'mov eax, z')
                    writeASM(lineCounterASM, 'mov x, eax')

                else:
                    eax = placeHolder[2]
                    x = eax
                    var4 = 'mov eax, ' + placeHolder[2]
                    writeASM(lineCounterASM, var4)
                    writeASM(lineCounterASM, 'mov x, eax')

            elif (placeHolder[0] == 'y'):
                if (placeHolder[2] == 'a'):
                    eax = a
                    y = eax
                    writeASM(lineCounterASM, 'mov eax, a')
                    writeASM(lineCounterASM, 'mov y, eax')

                elif (placeHolder[2] == 'b'):
                    eax = b
                    y = eax
                    writeASM(lineCounterASM, 'mov eax, b')
                    writeASM(lineCounterASM, 'mov y, eax')

                elif (placeHolder[2] == 'c'):
                    eax = c
                    y = eax
                    writeASM(lineCounterASM, 'mov eax, c')
                    writeASM(lineCounterASM, 'mov y, eax')

                elif (placeHolder[2] == 'x'):
                    eax = x
                    y = eax
                    writeASM(lineCounterASM, 'mov eax, x')
                    writeASM(lineCounterASM, 'mov y, eax')

                elif (placeHolder[2] == 'y'):
                    eax = y
                    y = eax
                    writeASM(lineCounterASM, 'mov eax, y')
                    writeASM(lineCounterASM, 'mov y, eax')

                elif (placeHolder[2] == 'z'):
                    eax = z
                    y = eax
                    writeASM(lineCounterASM, 'mov eax, z')
                    writeASM(lineCounterASM, 'mov y, eax')

                else:
                    eax = placeHolder[2]
                    y = eax
                    var4 = 'mov eax, ' + placeHolder[2]
                    writeASM(lineCounterASM, var4)
                    writeASM(lineCounterASM, 'mov y, eax')

            elif (placeHolder[0] == 'z'):
                if (placeHolder[2] == 'a'):
                    eax = a
                    z = eax
                    writeASM(lineCounterASM, 'mov eax, a')
                    writeASM(lineCounterASM, 'mov z, eax')

                elif (placeHolder[2] == 'b'):
                    eax = b
                    z = eax
                    writeASM(lineCounterASM, 'mov eax, b')
                    writeASM(lineCounterASM, 'mov z, eax')

                elif (placeHolder[2] == 'c'):
                    eax = c
                    z = eax
                    writeASM(lineCounterASM, 'mov eax, c')
                    writeASM(lineCounterASM, 'mov z, eax')

                elif (placeHolder[2] == 'x'):
                    eax = x
                    z = eax
                    writeASM(lineCounterASM, 'mov eax, x')
                    writeASM(lineCounterASM, 'mov z, eax')

                elif (placeHolder[2] == 'y'):
                    eax = y
                    z = eax
                    writeASM(lineCounterASM, 'mov eax, y')
                    writeASM(lineCounterASM, 'mov z, eax')

                elif (placeHolder[2] == 'z'):
                    eax = z
                    z = eax
                    writeASM(lineCounterASM, 'mov eax, z')
                    writeASM(lineCounterASM, 'mov z, eax')

                else:
                    eax = placeHolder[2]
                    z = eax
                    var4 = 'mov eax, ' + placeHolder[2]
                    writeASM(lineCounterASM, var4)
                    writeASM(lineCounterASM, 'mov z, eax')

            else:
                print('Compiler: Error for temp3 in abc')

        elif (temp == 5): #basic math : 0 1 2 3 4 : y = a + b
            #move varible to register eax
            if (placeHolder[2] == 'a'): 
                eax = a
                writeASM(lineCounterASM, 'mov eax, a')
            elif (placeHolder[2] == 'b'):
                eax = b
                writeASM(lineCounterASM, 'mov eax, b')
            elif (placeHolder[2] == 'c'):
                eax = c
                writeASM(lineCounterASM, 'mov eax, c')
            elif (placeHolder[2] == 'x'):
                eax = x
                writeASM(lineCounterASM, 'mov eax, x')
            elif (placeHolder[2] == 'y'):
                eax = y
                writeASM(lineCounterASM, 'mov eax, y') 
            elif (placeHolder[2] == 'z'):
                eax = z
                writeASM(lineCounterASM, 'mov eax, z')
            else:
                eax = placeHolder[2]
                var4 = 'mov eax, ' + placeHolder[2]
                writeASM(lineCounterASM, var4)

            #move varible to register ebx
            if (placeHolder[4] == 'a'):
                ebx = a
                writeASM(lineCounterASM, 'mov ebx, a')
            elif (placeHolder[4] == 'b'):
                ebx = b
                writeASM(lineCounterASM, 'mov ebx, b')
            elif (placeHolder[4] == 'c'):
                ebx = c
                writeASM(lineCounterASM, 'mov ebx, c')
            elif (placeHolder[4] == 'x'):
                ebx = x
                writeASM(lineCounterASM, 'mov ebx, x')
            elif (placeHolder[4] == 'y'):
                ebx = y
                writeASM(lineCounterASM, 'mov ebx, y')
            elif (placeHolder[4] == 'z'):
                ebx = c
                writeASM(lineCounterASM, 'mov ebx, z')
            else:
                ebx = placeHolder[4]
                var4 = 'mov ebx, ' + placeHolder[4]
                writeASM(lineCounterASM, var4)

            #does arithmetic and writes to txt assembly conversion
            if (placeHolder[0] == 'a'):
                if (placeHolder[3] == '+'):
                    eax = eax + ebx
                    a = eax
                    writeASM(lineCounterASM, 'add eax eax ebx')
                    writeASM(lineCounterASM, 'mov a, eax')

                elif (placeHolder[3] == '-'):
                    eax = eax - ebx
                    a = eax
                    writeASM(lineCounterASM, 'sub eax eax ebx')
                    writeASM(lineCounterASM, 'mov a, eax')

                elif (placeHolder[3] == '*'):
                    eax = eax * ebx
                    a = eax
                    writeASM(lineCounterASM, 'mult eax eax ebx')
                    writeASM(lineCounterASM, 'mov a, eax')

                elif (placeHolder[3] == '/'):
                    eax = eax / ebx
                    a = eax
                    writeASM(lineCounterASM, 'div eax eax ebx')
                    writeASM(lineCounterASM, 'mov a, eax')

                else:
                    print('Compiler: Error for Operator type in abc')
                    
            elif (placeHolder[0] == 'b'):
                if (placeHolder[3] == '+'):
                    eax = eax + ebx
                    b = eax
                    writeASM(lineCounterASM, 'add eax eax ebx')
                    writeASM(lineCounterASM, 'mov b, eax')

                elif (placeHolder[3] == '-'):
                    eax = eax - ebx
                    b = eax
                    writeASM(lineCounterASM, 'sub eax eax ebx')
                    writeASM(lineCounterASM, 'mov b, eax')

                elif (placeHolder[3] == '*'):
                    eax = eax * ebx
                    b = eax
                    writeASM(lineCounterASM, 'mult eax eax ebx')
                    writeASM(lineCounterASM, 'mov b, eax')

                elif (placeHolder[3] == '/'):
                    eax = eax / ebx
                    b = eax
                    writeASM(lineCounterASM, 'div eax eax ebx')
                    writeASM(lineCounterASM, 'mov b, eax')

                else:
                    print('Compiler: Error for Operator type in abc')                

            elif (placeHolder[0] == 'c'):
                if (placeHolder[3] == '+'):
                    eax = eax + ebx
                    c = eax
                    writeASM(lineCounterASM, 'add eax eax ebx')
                    writeASM(lineCounterASM, 'mov c, eax')

                elif (placeHolder[3] == '-'):
                    eax = eax - ebx
                    c = eax
                    writeASM(lineCounterASM, 'sub eax eax ebx')
                    writeASM(lineCounterASM, 'mov c, eax')

                elif (placeHolder[3] == '*'):
                    eax = eax * ebx
                    c = eax
                    writeASM(lineCounterASM, 'mult eax eax ebx')
                    writeASM(lineCounterASM, 'mov c, eax')

                elif (placeHolder[3] == '/'):
                    eax = eax / ebx
                    c = eax
                    writeASM(lineCounterASM, 'div eax eax ebx')
                    writeASM(lineCounterASM, 'mov c, eax')

                else:
                    print('Compiler: Error for Operator type in abc')   

            elif (placeHolder[0] == 'x'):
                if (placeHolder[3] == '+'):
                    eax = eax + ebx
                    x = eax
                    writeASM(lineCounterASM, 'add eax eax ebx')
                    writeASM(lineCounterASM, 'mov x, eax')

                elif (placeHolder[3] == '-'):
                    eax = eax - ebx
                    x = eax
                    writeASM(lineCounterASM, 'sub eax eax ebx')
                    writeASM(lineCounterASM, 'mov x, eax')

                elif (placeHolder[3] == '*'):
                    eax = eax * ebx
                    x = eax
                    writeASM(lineCounterASM, 'mult eax eax ebx')
                    writeASM(lineCounterASM, 'mov x, eax')

                elif (placeHolder[3] == '/'):
                    eax = eax / ebx
                    x = eax
                    writeASM(lineCounterASM, 'div eax eax ebx')
                    writeASM(lineCounterASM, 'mov x, eax')

                else:
                    print('Compiler: Error for Operator type in abc')            

            elif (placeHolder[0] == 'y'):
                if (placeHolder[3] == '+'):
                    eax = eax + ebx
                    y = eax
                    writeASM(lineCounterASM, 'add eax eax ebx')
                    writeASM(lineCounterASM, 'mov y, eax')

                elif (placeHolder[3] == '-'):
                    eax = eax - ebx
                    y = eax
                    writeASM(lineCounterASM, 'sub eax eax ebx')
                    writeASM(lineCounterASM, 'mov y, eax')

                elif (placeHolder[3] == '*'):
                    eax = eax * ebx
                    y = eax
                    writeASM(lineCounterASM, 'mult eax eax ebx')
                    writeASM(lineCounterASM, 'mov y, eax')

                elif (placeHolder[3] == '/'):
                    eax = eax / ebx
                    y = eax
                    writeASM(lineCounterASM, 'div eax eax ebx')
                    writeASM(lineCounterASM, 'mov y, eax')

                else:
                    print('Compiler: Error for Operator type in abc')

            elif (placeHolder[0] == 'z'):
                if (placeHolder[3] == '+'):
                    eax = eax + ebx
                    z = eax
                    writeASM(lineCounterASM, 'add eax eax ebx')
                    writeASM(lineCounterASM, 'mov z, eax')

                elif (placeHolder[3] == '-'):
                    eax = eax - ebx
                    z = eax
                    writeASM(lineCounterASM, 'sub eax eax ebx')
                    writeASM(lineCounterASM, 'mov z, eax')

                elif (placeHolder[3] == '*'):
                    eax = eax * ebx
                    z = eax
                    writeASM(lineCounterASM, 'mult eax eax ebx')
                    writeASM(lineCounterASM, 'mov z, eax')

                elif (placeHolder[3] == '/'):
                    eax = eax / ebx
                    z = eax
                    writeASM(lineCounterASM, 'div eax eax ebx')
                    writeASM(lineCounterASM, 'mov z, eax')

                else:
                    print('Compiler: Error for Operator type in abc')

            else:
                print ('Compiler: Error at temp5 abc')

        elif (temp == 7): #2 types for the math : Y = X + Z + 3 : 0 1 2 3 4 5 6
            #move varible to register eax
            if (placeHolder[2] == 'a'): 
                eax = a
                writeASM(lineCounterASM, 'mov eax, a')
            elif (placeHolder[2] == 'b'):
                eax = b
                writeASM(lineCounterASM, 'mov eax, b')
            elif (placeHolder[2] == 'c'):
                eax = c
                writeASM(lineCounterASM, 'mov eax, c')
            elif (placeHolder[2] == 'x'):
                eax = x
                writeASM(lineCounterASM, 'mov eax, x')
            elif (placeHolder[2] == 'y'):
                eax = y
                writeASM(lineCounterASM, 'mov eax, y') 
            elif (placeHolder[2] == 'z'):
                eax = z
                writeASM(lineCounterASM, 'mov eax, z')
            else:
                eax = placeHolder[2]
                var4 = 'mov eax, ' + placeHolder[2]
                writeASM(lineCounterASM, var4)

            #move varible to register ebx
            if (placeHolder[4] == 'a'):
                ebx = a
                writeASM(lineCounterASM, 'mov ebx, a')
            elif (placeHolder[4] == 'b'):
                ebx = b
                writeASM(lineCounterASM, 'mov ebx, b')
            elif (placeHolder[4] == 'c'):
                ebx = c
                writeASM(lineCounterASM, 'mov ebx, c')
            elif (placeHolder[4] == 'x'):
                ebx = x
                writeASM(lineCounterASM, 'mov ebx, x')
            elif (placeHolder[4] == 'y'):
                ebx = y
                writeASM(lineCounterASM, 'mov ebx, y')
            elif (placeHolder[4] == 'z'):
                ebx = c
                writeASM(lineCounterASM, 'mov ebx, z')
            else:
                ebx = placeHolder[4]
                var4 = 'mov ebx, ' + placeHolder[4]
                writeASM(lineCounterASM, var4)
        
            #move varible to register ecx
            if (placeHolder[6] == 'a'):
                ecx = a
                writeASM(lineCounterASM, 'mov ecx, a')
            elif (placeHolder[6] == 'b'):
                ecx = b
                writeASM(lineCounterASM, 'mov ecx, b')
            elif (placeHolder[6] == 'c'):
                ecx = c
                writeASM(lineCounterASM, 'mov ecx, c')
            elif (placeHolder[6] == 'x'):
                ecx = x
                writeASM(lineCounterASM, 'mov ecx, x')
            elif (placeHolder[6] == 'y'):
                ecx = y
                writeASM(lineCounterASM, 'mov ecx, y')
            elif (placeHolder[6] == 'z'):
                ecx = c
                writeASM(lineCounterASM, 'mov ecx, z')
            else:
                ecx = placeHolder[6]
                var4 = 'mov ecx, ' + placeHolder[6]
                writeASM(lineCounterASM, var4)       
        
            #does double arithmetic and converts to assembly
            if (placeHolder[0] == 'a'): # Y = X + Z + 3 : 0 1 2 3 4 5 6
                if (placeHolder[3] == '+'):
                    if (placeHolder[5] == '+'):
                        eax = eax + ebx + ecx
                        a = eax
                        writeASM(lineCounterASM, 'addadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax + ebx - ecx
                        a = eax
                        writeASM(lineCounterASM, 'addsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax + ebx * ecx
                        a = eax
                        writeASM(lineCounterASM, 'addmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax + ebx / ecx
                        a = eax
                        writeASM(lineCounterASM, 'adddiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    else:
                        print('Compiler: Error in temp7 equations')

                elif (placeHolder[3] == '-'):
                    if (placeHolder[5] == '+'):
                        eax = eax - ebx + ecx
                        a = eax
                        writeASM(lineCounterASM, 'subadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax - ebx - ecx
                        a = eax
                        writeASM(lineCounterASM, 'subsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax - ebx * ecx
                        a = eax
                        writeASM(lineCounterASM, 'submult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax - ebx / ecx
                        a = eax
                        writeASM(lineCounterASM, 'subdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '*'):
                    if (placeHolder[5] == '+'):
                        eax = eax * ebx + ecx
                        a = eax
                        writeASM(lineCounterASM, 'multadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax * ebx - ecx
                        a = eax
                        writeASM(lineCounterASM, 'multsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax * ebx * ecx
                        a = eax
                        writeASM(lineCounterASM, 'multmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax * ebx / ecx
                        a = eax
                        writeASM(lineCounterASM, 'multdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '/'):
                    if (placeHolder[5] == '+'):
                        eax = eax / ebx + ecx
                        a = eax
                        writeASM(lineCounterASM, 'divadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax / ebx - ecx
                        a = eax
                        writeASM(lineCounterASM, 'divsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax / ebx * ecx
                        a = eax
                        writeASM(lineCounterASM, 'divmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax / ebx / ecx
                        a = eax
                        writeASM(lineCounterASM, 'divdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                else:
                    print('Compiler: Error in a double arithmetic parta')

            elif (placeHolder[0] == 'b'):
                if (placeHolder[3] == '+'):
                    if (placeHolder[5] == '+'):
                        eax = eax + ebx + ecx
                        b = eax
                        writeASM(lineCounterASM, 'addadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax + ebx - ecx
                        b = eax
                        writeASM(lineCounterASM, 'addsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax + ebx * ecx
                        b = eax
                        writeASM(lineCounterASM, 'addmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax + ebx / ecx
                        b = eax
                        writeASM(lineCounterASM, 'adddiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    else:
                        print('Compiler: Error in temp7 equations')

                elif (placeHolder[3] == '-'):
                    if (placeHolder[5] == '+'):
                        eax = eax - ebx + ecx
                        b = eax
                        writeASM(lineCounterASM, 'subadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax - ebx - ecx
                        b = eax
                        writeASM(lineCounterASM, 'subsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax - ebx * ecx
                        b = eax
                        writeASM(lineCounterASM, 'submult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax - ebx / ecx
                        b = eax
                        writeASM(lineCounterASM, 'subdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '*'):
                    if (placeHolder[5] == '+'):
                        eax = eax * ebx + ecx
                        b = eax
                        writeASM(lineCounterASM, 'multadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax * ebx - ecx
                        b = eax
                        writeASM(lineCounterASM, 'multsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax * ebx * ecx
                        b = eax
                        writeASM(lineCounterASM, 'multmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax * ebx / ecx
                        b = eax
                        writeASM(lineCounterASM, 'multdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '/'):
                    if (placeHolder[5] == '+'):
                        eax = eax / ebx + ecx
                        b = eax
                        writeASM(lineCounterASM, 'divadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax / ebx - ecx
                        b = eax
                        writeASM(lineCounterASM, 'divsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax / ebx * ecx
                        b = eax
                        writeASM(lineCounterASM, 'divmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax / ebx / ecx
                        b = eax
                        writeASM(lineCounterASM, 'divdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov b, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                else:
                    print('Compiler: Error in a double arithmetic partb')

            elif (placeHolder[0] == 'c'):
                if (placeHolder[3] == '+'):
                    if (placeHolder[5] == '+'):
                        eax = eax + ebx + ecx
                        c = eax
                        writeASM(lineCounterASM, 'addadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax + ebx - ecx
                        c = eax
                        writeASM(lineCounterASM, 'addsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax + ebx * ecx
                        c = eax
                        writeASM(lineCounterASM, 'addmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax + ebx / ecx
                        c = eax
                        writeASM(lineCounterASM, 'adddiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    else:
                        print('Compiler: Error in temp7 equations')

                elif (placeHolder[3] == '-'):
                    if (placeHolder[5] == '+'):
                        eax = eax - ebx + ecx
                        c = eax
                        writeASM(lineCounterASM, 'subadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax - ebx - ecx
                        c = eax
                        writeASM(lineCounterASM, 'subsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax - ebx * ecx
                        c = eax
                        writeASM(lineCounterASM, 'submult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax - ebx / ecx
                        c = eax
                        writeASM(lineCounterASM, 'subdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '*'):
                    if (placeHolder[5] == '+'):
                        eax = eax * ebx + ecx
                        c = eax
                        writeASM(lineCounterASM, 'multadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax * ebx - ecx
                        c = eax
                        writeASM(lineCounterASM, 'multsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax * ebx * ecx
                        c = eax
                        writeASM(lineCounterASM, 'multmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax * ebx / ecx
                        c = eax
                        writeASM(lineCounterASM, 'multdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '/'):
                    if (placeHolder[5] == '+'):
                        eax = eax / ebx + ecx
                        c = eax
                        writeASM(lineCounterASM, 'divadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax / ebx - ecx
                        c = eax
                        writeASM(lineCounterASM, 'divsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax / ebx * ecx
                        c = eax
                        writeASM(lineCounterASM, 'divmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax / ebx / ecx
                        c = eax
                        writeASM(lineCounterASM, 'divdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov c, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                else:
                    print('Compiler: Error in a double arithmetic partc')

            elif (placeHolder[0] == 'x'):
                if (placeHolder[3] == '+'):
                    if (placeHolder[5] == '+'):
                        eax = eax + ebx + ecx
                        x = eax
                        writeASM(lineCounterASM, 'addadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax + ebx - ecx
                        x = eax
                        writeASM(lineCounterASM, 'addsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax + ebx * ecx
                        x = eax
                        writeASM(lineCounterASM, 'addmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax + ebx / ecx
                        x = eax
                        writeASM(lineCounterASM, 'adddiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    else:
                        print('Compiler: Error in temp7 equations')

                elif (placeHolder[3] == '-'):
                    if (placeHolder[5] == '+'):
                        eax = eax - ebx + ecx
                        x = eax
                        writeASM(lineCounterASM, 'subadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax - ebx - ecx
                        x = eax
                        writeASM(lineCounterASM, 'subsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax - ebx * ecx
                        x = eax
                        writeASM(lineCounterASM, 'submult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax - ebx / ecx
                        x = eax
                        writeASM(lineCounterASM, 'subdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov a, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '*'):
                    if (placeHolder[5] == '+'):
                        eax = eax * ebx + ecx
                        x = eax
                        writeASM(lineCounterASM, 'multadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax * ebx - ecx
                        x = eax
                        writeASM(lineCounterASM, 'multsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax * ebx * ecx
                        x = eax
                        writeASM(lineCounterASM, 'multmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax * ebx / ecx
                        x = eax
                        writeASM(lineCounterASM, 'multdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '/'):
                    if (placeHolder[5] == '+'):
                        eax = eax / ebx + ecx
                        x = eax
                        writeASM(lineCounterASM, 'divadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax / ebx - ecx
                        x = eax
                        writeASM(lineCounterASM, 'divsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax / ebx * ecx
                        x = eax
                        writeASM(lineCounterASM, 'divmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax / ebx / ecx
                        x = eax
                        writeASM(lineCounterASM, 'divdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov x, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                else:
                    print('Compiler: Error in a double arithmetic partx')

            elif (placeHolder[0] == 'y'):
                if (placeHolder[3] == '+'):
                    if (placeHolder[5] == '+'):
                        eax = eax + ebx + ecx
                        y = eax
                        writeASM(lineCounterASM, 'addadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax + ebx - ecx
                        y = eax
                        writeASM(lineCounterASM, 'addsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax + ebx * ecx
                        y = eax
                        writeASM(lineCounterASM, 'addmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax + ebx / ecx
                        y = eax
                        writeASM(lineCounterASM, 'adddiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    else:
                        print('Compiler: Error in temp7 equations')

                elif (placeHolder[3] == '-'):
                    if (placeHolder[5] == '+'):
                        eax = eax - ebx + ecx
                        y = eax
                        writeASM(lineCounterASM, 'subadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax - ebx - ecx
                        y = eax
                        writeASM(lineCounterASM, 'subsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax - ebx * ecx
                        y = eax
                        writeASM(lineCounterASM, 'submult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax - ebx / ecx
                        y = eax
                        writeASM(lineCounterASM, 'subdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '*'):
                    if (placeHolder[5] == '+'):
                        eax = eax * ebx + ecx
                        y = eax
                        writeASM(lineCounterASM, 'multadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax * ebx - ecx
                        y = eax
                        writeASM(lineCounterASM, 'multsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax * ebx * ecx
                        y = eax
                        writeASM(lineCounterASM, 'multmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax * ebx / ecx
                        y = eax
                        writeASM(lineCounterASM, 'multdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '/'):
                    if (placeHolder[5] == '+'):
                        eax = eax / ebx + ecx
                        y = eax
                        writeASM(lineCounterASM, 'divadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax / ebx - ecx
                        y = eax
                        writeASM(lineCounterASM, 'divsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax / ebx * ecx
                        y = eax
                        writeASM(lineCounterASM, 'divmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax / ebx / ecx
                        y = eax
                        writeASM(lineCounterASM, 'divdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov y, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                else:
                    print('Compiler: Error in a double arithmetic party')

            elif (placeHolder[0] == 'z'):
                if (placeHolder[3] == '+'):
                    if (placeHolder[5] == '+'):
                        eax = eax + ebx + ecx
                        z = eax
                        writeASM(lineCounterASM, 'addadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax + ebx - ecx
                        z = eax
                        writeASM(lineCounterASM, 'addsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax + ebx * ecx
                        z = eax
                        writeASM(lineCounterASM, 'addmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax + ebx / ecx
                        z = eax
                        writeASM(lineCounterASM, 'adddiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    else:
                        print('Compiler: Error in temp7 equations')

                elif (placeHolder[3] == '-'):
                    if (placeHolder[5] == '+'):
                        eax = eax - ebx + ecx
                        z = eax
                        writeASM(lineCounterASM, 'subadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax - ebx - ecx
                        z = eax
                        writeASM(lineCounterASM, 'subsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax - ebx * ecx
                        z = eax
                        writeASM(lineCounterASM, 'submult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax - ebx / ecx
                        z = eax
                        writeASM(lineCounterASM, 'subdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '*'):
                    if (placeHolder[5] == '+'):
                        eax = eax * ebx + ecx
                        z = eax
                        writeASM(lineCounterASM, 'multadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax * ebx - ecx
                        z = eax
                        writeASM(lineCounterASM, 'multsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax * ebx * ecx
                        z = eax
                        writeASM(lineCounterASM, 'multmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax * ebx / ecx
                        z = eax
                        writeASM(lineCounterASM, 'multdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                elif (placeHolder[3] == '/'):
                    if (placeHolder[5] == '+'):
                        eax = eax / ebx + ecx
                        z = eax
                        writeASM(lineCounterASM, 'divadd eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '-'):
                        eax = eax / ebx - ecx
                        z = eax
                        writeASM(lineCounterASM, 'divsub eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '*'):
                        eax = eax / ebx * ecx
                        z = eax
                        writeASM(lineCounterASM, 'divmult eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    elif (placeHolder[5] == '/'):
                        eax = eax / ebx / ecx
                        z = eax
                        writeASM(lineCounterASM, 'divdiv eax eax ebx ecx')
                        writeASM(lineCounterASM, 'mov z, eax')

                    else:
                        print('Compiler: Error in temp7 equations')
                
                else:
                    print('Compiler: Error in a double arithmetic partz')

            else:
                print('Compiler: Error in temp7')

        else:
            print("Compiler: Temp Length is not right")

        return 0